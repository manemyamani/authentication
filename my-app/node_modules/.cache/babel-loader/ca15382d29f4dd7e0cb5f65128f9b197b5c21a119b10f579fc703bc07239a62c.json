{"ast":null,"code":"var _jsxFileName = \"C:\\\\project1\\\\my-app\\\\src\\\\pages\\\\OtpVerification.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './OtpVerification.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpVerification = () => {\n  _s();\n  const [otp, setOtp] = useState('');\n  const [email, setEmail] = useState('');\n  const [timeLeft, setTimeLeft] = useState(600); // 10 minutes countdown timer\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const emailParam = queryParams.get('email');\n    if (emailParam) {\n      setEmail(emailParam);\n    }\n\n    // Countdown timer logic\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timer);\n          alert('OTP has expired. Please request a new one.');\n          navigate('/forgot-password');\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [location, navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/verify-otp', {\n        email,\n        otp\n      });\n      if (response.status === 200) {\n        alert('OTP verified');\n        navigate(`/reset-password?email=${email}`);\n      }\n    } catch (error) {\n      if (error.response) {\n        console.error('Error verifying OTP', error.response.data);\n        alert(`Error: ${error.response.data.message}`);\n      } else {\n        console.error('Error verifying OTP', error);\n        alert('An error occurred. Please try again.');\n      }\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-verification-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"otp-verification-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OTP Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"otp\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time left: \", formatTime(timeLeft)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(OtpVerification, \"LowJeD6hshIeWFxBdjI+hz2u3cw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = OtpVerification;\nexport default OtpVerification;\nvar _c;\n$RefreshReg$(_c, \"OtpVerification\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","OtpVerification","_s","otp","setOtp","email","setEmail","timeLeft","setTimeLeft","navigate","location","queryParams","URLSearchParams","search","emailParam","get","timer","setInterval","prevTime","clearInterval","alert","handleSubmit","e","preventDefault","response","post","status","error","console","data","message","formatTime","seconds","minutes","Math","floor","secs","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/project1/my-app/src/pages/OtpVerification.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './OtpVerification.css';\r\n\r\nconst OtpVerification = () => {\r\n    const [otp, setOtp] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [timeLeft, setTimeLeft] = useState(600); // 10 minutes countdown timer\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const queryParams = new URLSearchParams(location.search);\r\n        const emailParam = queryParams.get('email');\r\n        if (emailParam) {\r\n            setEmail(emailParam);\r\n        }\r\n\r\n        // Countdown timer logic\r\n        const timer = setInterval(() => {\r\n            setTimeLeft(prevTime => {\r\n                if (prevTime <= 1) {\r\n                    clearInterval(timer);\r\n                    alert('OTP has expired. Please request a new one.');\r\n                    navigate('/forgot-password');\r\n                    return 0;\r\n                }\r\n                return prevTime - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [location, navigate]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/verify-otp', { email, otp });\r\n            if (response.status === 200) {\r\n                alert('OTP verified');\r\n                navigate(`/reset-password?email=${email}`);\r\n            }\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.error('Error verifying OTP', error.response.data);\r\n                alert(`Error: ${error.response.data.message}`);\r\n            } else {\r\n                console.error('Error verifying OTP', error);\r\n                alert('An error occurred. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"otp-verification-container\">\r\n            <form className=\"otp-verification-form\" onSubmit={handleSubmit}>\r\n                <h2>OTP Verification</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"otp\"\r\n                    placeholder=\"Enter OTP\"\r\n                    value={otp}\r\n                    onChange={(e) => setOtp(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Verify OTP</button>\r\n                <p>Time left: {formatTime(timeLeft)}</p>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OtpVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
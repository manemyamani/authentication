{"ast":null,"code":"var _jsxFileName = \"C:\\\\project1\\\\my-app\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './ResetPassword.css'; // Create this file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    password: '',\n    confirmPassword: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:5000/api/reset-password/${token}`, {\n        password: formData.password\n      });\n      if (response.status === 200) {\n        alert('Password reset successful!');\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error('Error resetting password', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"New Password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPassword, \"dAAJezRxkMyRoQ4Ha2AGCxqJFwg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","axios","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","formData","setFormData","password","confirmPassword","handleChange","e","name","value","target","handleSubmit","preventDefault","alert","response","post","status","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/project1/my-app/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './ResetPassword.css'; // Create this file for styling\r\n\r\nfunction ResetPassword() {\r\n    const { token } = useParams();\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (formData.password !== formData.confirmPassword) {\r\n            alert('Passwords do not match');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(`http://localhost:5000/api/reset-password/${token}`, { password: formData.password });\r\n            if (response.status === 200) {\r\n                alert('Password reset successful!');\r\n                navigate('/login');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error resetting password', error);\r\n            alert('An error occurred. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Reset Password</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"password\" name=\"password\" placeholder=\"New Password\" onChange={handleChange} required />\r\n                <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" onChange={handleChange} required />\r\n                <button type=\"submit\">Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
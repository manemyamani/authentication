{"ast":null,"code":"var _jsxFileName = \"C:\\\\project1\\\\my-app\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\n// src/pages/ResetPassword.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [token, setToken] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const tokenParam = queryParams.get('token');\n    if (tokenParam) {\n      setToken(tokenParam);\n    }\n  }, [location]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:5000/api/reset-password', {\n        token,\n        newPassword: password\n      });\n      alert('Password reset successful!');\n      navigate('/login');\n    } catch (error) {\n      console.error('Error resetting password', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"reset-password-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm New Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"08M7cND5z6O+BKtqg56ss9DVjc4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","token","setToken","navigate","location","queryParams","URLSearchParams","search","tokenParam","get","handleSubmit","e","preventDefault","alert","post","newPassword","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/project1/my-app/src/pages/ResetPassword.js"],"sourcesContent":["// src/pages/ResetPassword.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './ResetPassword.css';\r\n\r\nconst ResetPassword = () => {\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [token, setToken] = useState('');\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const queryParams = new URLSearchParams(location.search);\r\n        const tokenParam = queryParams.get('token');\r\n        if (tokenParam) {\r\n            setToken(tokenParam);\r\n        }\r\n    }, [location]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match');\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post('http://localhost:5000/api/reset-password', { token, newPassword: password });\r\n            alert('Password reset successful!');\r\n            navigate('/login');\r\n        } catch (error) {\r\n            console.error('Error resetting password', error);\r\n            alert('An error occurred. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reset-password-container\">\r\n            <form className=\"reset-password-form\" onSubmit={handleSubmit}>\r\n                <h2>Reset Password</h2>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"New Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm New Password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMe,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,MAAMgB,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;IACxD,MAAMC,UAAU,GAAGH,WAAW,CAACI,GAAG,CAAC,OAAO,CAAC;IAC3C,IAAID,UAAU,EAAE;MACZN,QAAQ,CAACM,UAAU,CAAC;IACxB;EACJ,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMM,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIf,QAAQ,KAAKE,eAAe,EAAE;MAC9Bc,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACJ;IACA,IAAI;MACA,MAAMvB,KAAK,CAACwB,IAAI,CAAC,0CAA0C,EAAE;QAAEb,KAAK;QAAEc,WAAW,EAAElB;MAAS,CAAC,CAAC;MAC9FgB,KAAK,CAAC,4BAA4B,CAAC;MACnCV,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDH,KAAK,CAAC,sCAAsC,CAAC;IACjD;EACJ,CAAC;EAED,oBACInB,OAAA;IAAKwB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,eACrCzB,OAAA;MAAMwB,SAAS,EAAC,qBAAqB;MAACE,QAAQ,EAAEV,YAAa;MAAAS,QAAA,gBACzDzB,OAAA;QAAAyB,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB9B,OAAA;QACI+B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAE9B,QAAS;QAChB+B,QAAQ,EAAGjB,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACF9B,OAAA;QACI+B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAE5B,eAAgB;QACvB6B,QAAQ,EAAGjB,CAAC,IAAKX,kBAAkB,CAACW,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QACpDG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACF9B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC5B,EAAA,CArDID,aAAa;EAAA,QAIEH,WAAW,EACXD,WAAW;AAAA;AAAAwC,EAAA,GAL1BpC,aAAa;AAuDnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}